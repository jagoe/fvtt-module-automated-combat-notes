name: Publish release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: yarn

      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Run Vite build
        env:
          MODULE_VERSION: ${{steps.get_version.outputs.version-without-v}}
          GH_PROJECT: ${{github.repository}}
          GH_TAG: ${{github.event.release.tag_name}}
        run: yarn build

      - name: Create zip archive
        working-directory: dist
        run: zip -r ./module.zip module.json style.css scripts/ templates/ languages/

      - name: Update release with files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./dist/module.json, ./dist/module.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}

      - name: Read module data
        id: get_module_data
        if: ${{ ! github.event.release.prerelease }}
        uses: ActionsTools/read-json-action@main
        with:
          file_path: dist/module.json

      - name: Add new package version on Foundry
        if: ${{ ! github.event.release.prerelease }}
        run: |
          curl -X POST \
            https://api.foundryvtt.com/_api/packages/release_version/ \
            --header "Content-Type: application/json" \
            --header "Authorization: ${{secrets.FOUNDRY_PACKAGE_RELEASE_TOKEN}}" \
            --data-binary @- <<EOF
            {
              "id": "${{steps.get_module_data.outputs.id}}",
              "release": {
                "version": "${{steps.get_version.outputs.version-without-v}}",
                "manifest": "https://github.com/jagoe/fvtt-module-automated-combat-notes/releases/download/${{github.event.release.tag_name}}/module.json",
                "notes": "https://github.com/jagoe/fvtt-module-automated-combat-notes/releases/tag/${{github.event.release.tag_name}}",
                "compatibility": ${{steps.get_module_data.outputs.compatibility}}
              }
            }
          EOF
